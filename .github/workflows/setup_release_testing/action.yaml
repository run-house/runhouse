name: Setup Release Testing

description: Reusable steps for prepping release testing

inputs:
  AWS_OSS_ROLE_ARN:
    description: 'AWS OSS Role ARN'
    required: false
  DEV_AWS_ACCESS_KEY: # TODO we should rely only on the ROLE_ARN above
    description: 'AWS Access Key ID'
    required: false
  DEV_AWS_SECRET_KEY:  # TODO we should rely only on the ROLE_ARN above
    description: 'AWS Secret Access Key'
  GCP_SERVICE_ACCOUNT_KEY:
    description: 'GCP Service Account Key'
    required: false
  GCP_PROJECT_ID:
    description: 'GCP Project ID'
    required: false
  KUBECONFIG:
    description: 'Kubeconfig'
    required: false
  DEN_TESTER_TOKEN:
    description: 'Den Tester Token'
    required: true
  DEN_TESTER_SSH_PRIVATE_KEY:
    description: 'Den Tester Private SSH Key'
    required: true
  DEN_TESTER_SSH_PUBLIC_KEY:
    description: 'Den Tester Public SSH Key'
    required: true
  DEN_TESTER_USERNAME:
    description: 'Den Tester Username'
    required: true
  API_SERVER_URL:
    description: 'API Server URL'
    required: true
  EKS_ARN:
    description: 'EKS ARN'
    required: true


runs:
  using: composite
  steps:
    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Install AWS CLI v2
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version
      shell: bash


    - name: Configure & Authenticate to AWS
      run: |
        if [[ -z "${{ inputs.DEV_AWS_ACCESS_KEY }}" || -z "${{ inputs.DEV_AWS_SECRET_KEY }}" ]]; then
          echo "Error: AWS credentials not provided!"
          exit 1
        fi

        mkdir -p ~/.aws

        # Store credentials in ~/.aws/credentials (preferred method)
        cat <<EOF > ~/.aws/credentials
        [default]
        aws_access_key_id=${{ inputs.DEV_AWS_ACCESS_KEY }}
        aws_secret_access_key=${{ inputs.DEV_AWS_SECRET_KEY }}
        region=us-east-1
        EOF

        # Set up AWS CLI to use the correct profile
        aws configure set default.region us-east-1

        # Verify credentials
        aws sts get-caller-identity
      shell: bash


    - name: Setup Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ inputs.KUBECONFIG }}" > $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config

        aws sts get-caller-identity

        # Ensure kubeconfig is updated with correct IAM role
        aws eks update-kubeconfig --name runhouse-k8s --region us-east-1
        aws eks list-clusters

        kubectl config view
        kubectl config get-contexts

        sudo apt-get update
        sudo apt-get install -y socat netcat-openbsd
      shell: bash


    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ inputs.GCP_SERVICE_ACCOUNT_KEY }}
        project_id: ${{ inputs.GCP_PROJECT_ID }}

    - name: Install Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ inputs.GCP_PROJECT_ID }}
        service_account_key: ${{ inputs.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Install & check skypilot configuration
      run: |
        python -m pip install --upgrade pip
        pip install "skypilot[aws,gcp,kubernetes]"
        sky check
        sky status
      shell: bash

    - name: Install python packages & dependencies
      run: |
        pip install git+https://github.com/run-house/runhouse.git@main#egg=runhouse[aws,gcp,kubernetes]
        pip install -r tests/requirements.txt
        pip install beautifulsoup4==4.11.1
      shell: bash

    - name: Setup Runhouse
      uses: ./.github/workflows/setup_runhouse
      with:
        den_tester_ssh_private_key: ${{ inputs.DEN_TESTER_SSH_PRIVATE_KEY }}
        den_tester_ssh_public_key: ${{ inputs.DEN_TESTER_SSH_PUBLIC_KEY }}

    - name: Setup ~/.rh/config.yaml
      uses: ./.github/workflows/setup_rh_config
      with:
        username: ${{ inputs.DEN_TESTER_USERNAME }}
        token: ${{ inputs.DEN_TESTER_TOKEN }}
        api_server_url: ${{ inputs.API_SERVER_URL }}
